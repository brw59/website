{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 HOW TO USE\
\
g++ autogen.cpp -o autogen\
./autogen\
select which base you want \'85 for demonstration purposes, suppose I picked 2\
~generates 
\f1\fs22 \CocoaLigature0 TMAUTOtimes2.jff 
\f0\fs24 \CocoaLigature1 file\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf0 \CocoaLigature0 java -jar JFlap.jar TMAUTOtimes2.jff\
select \'91Input\'92 then put a binary number in input 1 and input 2 that you would like multiplied.\
click \'91ok\'92\
click \'91step\'92 until the multiplication has taken place and it turns green (don\'92t over click or the program thinks it\'92s done and it will quit)\
\
\
\
\
NOTES:\
The basecalc.cpp isn\'92t necessary to have but might be good to have\
the pdf was generated using LaTex, .tex file provided\
\
The \'91TMtimes#_by hand.jff\'92 files were before we created through JFLAP before we generated the .jff files from the \'91autogen\'92. Same thing with the extra .jff files\
 \
See here for a definition on automata: {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Deterministic_finite_automaton"}}{\fldrslt https://en.wikipedia.org/wiki/Deterministic_finite_automaton}}}